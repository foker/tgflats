const { chromium } = require('playwright');

(async () => {
  const browser = await chromium.launch({ headless: false });
  const context = await browser.newContext();
  const page = await context.newPage();

  // –°–æ–±–∏—Ä–∞–µ–º –≤—Å–µ –æ—à–∏–±–∫–∏ –∫–æ–Ω—Å–æ–ª–∏
  const consoleErrors = [];
  const networkErrors = [];

  page.on('console', msg => {
    if (msg.type() === 'error') {
      consoleErrors.push({
        text: msg.text(),
        location: msg.location()
      });
      console.log('‚ùå Console Error:', msg.text());
    }
  });

  page.on('pageerror', error => {
    console.log('‚ùå Page Error:', error.message);
  });

  page.on('requestfailed', request => {
    networkErrors.push({
      url: request.url(),
      failure: request.failure()
    });
    console.log('‚ùå Network Error:', request.url(), request.failure()?.errorText);
  });

  // –û—Ç–∫—Ä—ã–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É
  console.log('üîç Opening http://localhost:5173...');
  
  try {
    await page.goto('http://localhost:5173', { waitUntil: 'networkidle' });
    
    // –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ —á—Ç–æ–±—ã –≤—Å–µ –∑–∞–≥—Ä—É–∑–∏–ª–æ—Å—å
    await page.waitForTimeout(3000);
    
    console.log('\nüìä Summary:');
    console.log('Console Errors:', consoleErrors.length);
    console.log('Network Errors:', networkErrors.length);
    
    if (consoleErrors.length > 0) {
      console.log('\nüî¥ Console Errors Details:');
      consoleErrors.forEach((err, i) => {
        console.log(`${i + 1}. ${err.text}`);
        if (err.location) {
          console.log(`   at ${err.location.url}:${err.location.lineNumber}`);
        }
      });
    }
    
    if (networkErrors.length > 0) {
      console.log('\nüî¥ Network Errors Details:');
      networkErrors.forEach((err, i) => {
        console.log(`${i + 1}. ${err.url}`);
        console.log(`   ${err.failure?.errorText}`);
      });
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
    const title = await page.textContent('h1, h2, .text-2xl');
    console.log('\nüìÑ Page Title:', title);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ª–∏—Å—Ç–∏–Ω–≥–æ–≤
    const listings = await page.locator('[data-testid="listing-card"], .listing-card, [class*="listing"]').count();
    console.log('üì¶ Listings found:', listings);
    
    // –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç
    await page.screenshot({ path: 'frontend-state.png', fullPage: true });
    console.log('üì∏ Screenshot saved: frontend-state.png');
    
    // –û—Å—Ç–∞–≤–ª—è–µ–º –±—Ä–∞—É–∑–µ—Ä –æ—Ç–∫—Ä—ã—Ç—ã–º 10 —Å–µ–∫—É–Ω–¥ —á—Ç–æ–±—ã –º–æ–∂–Ω–æ –±—ã–ª–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å
    console.log('\nüëÄ Browser will stay open for 10 seconds...');
    await page.waitForTimeout(10000);
    
  } catch (error) {
    console.error('Failed to load page:', error.message);
  }
  
  await browser.close();
})();