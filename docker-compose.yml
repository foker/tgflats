version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: tbi-prop-postgres
    environment:
      POSTGRES_DB: tbi_prop
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - tbi-prop-network

  # Redis for queues and caching
  redis:
    image: redis:7-alpine
    container_name: tbi-prop-redis
    ports:
      - "6381:6379"
    volumes:
      - redis_data:/data
    networks:
      - tbi-prop-network

  # NestJS Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: tbi-prop-backend
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/tbi_prop
      - REDIS_URL=redis://redis:6379
      - PORT=3333
      - JWT_SECRET=dev-secret-key-change-in-production
      - GOOGLE_MAPS_API_KEY=${GOOGLE_MAPS_API_KEY}
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - APIFY_USER_ID=${APIFY_USER_ID}
      - APIFY_SECRET=${APIFY_SECRET}
      - APIFY_ACTOR_ID=${APIFY_ACTOR_ID}
      - PARSE_INTERVAL_MINUTES=999999
    ports:
      - "3333:3333"
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      - postgres
      - redis
    networks:
      - tbi-prop-network
    command: npm run start:dev

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: tbi-prop-frontend
    environment:
      - VITE_API_URL=http://localhost:3333/api
      - VITE_GOOGLE_MAPS_API_KEY=${GOOGLE_MAPS_API_KEY}
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - tbi-prop-network
    command: npm run dev -- --host 0.0.0.0

  # Nginx Reverse Proxy
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: tbi-prop-nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - backend
      - frontend
    networks:
      - tbi-prop-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  tbi-prop-network:
    driver: bridge