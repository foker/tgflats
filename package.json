{
  "name": "tbi-prop",
  "version": "1.0.0",
  "description": "Tbilisi Property Rental Platform - Full-stack application for property aggregation",
  "scripts": {
    "dev": "docker-compose up",
    "dev:build": "docker-compose up --build",
    "dev:down": "docker-compose down",
    "dev:logs": "docker-compose logs -f",
    "dev:backend": "cd backend && npm run start:dev",
    "dev:frontend": "cd frontend && npm run dev",
    "install:all": "npm run install:backend && npm run install:frontend",
    "install:backend": "cd backend && npm install",
    "install:frontend": "cd frontend && npm install",
    "build": "npm run build:backend && npm run build:frontend",
    "build:backend": "cd backend && npm run build",
    "build:frontend": "cd frontend && npm run build",
    "test": "npm run test:backend && npm run test:frontend",
    "test:backend": "cd backend && npm run test",
    "test:frontend": "cd frontend && npm run test",
    "lint": "npm run lint:backend && npm run lint:frontend",
    "lint:backend": "cd backend && npm run lint",
    "lint:frontend": "cd frontend && npm run lint",
    "format": "npm run format:backend && npm run format:frontend",
    "format:backend": "cd backend && npm run format",
    "format:frontend": "cd frontend && npm run format",
    "db:migrate": "cd backend && npx prisma migrate dev",
    "db:generate": "cd backend && npx prisma generate",
    "db:studio": "cd backend && npx prisma studio",
    "db:reset": "cd backend && npx prisma migrate reset",
    "clean": "npm run clean:backend && npm run clean:frontend",
    "clean:backend": "cd backend && rm -rf dist node_modules",
    "clean:frontend": "cd frontend && rm -rf dist node_modules",
    "setup": "npm run install:all && cp .env.example .env"
  },
  "keywords": [
    "property",
    "rental",
    "tbilisi",
    "telegram",
    "nestjs",
    "react",
    "typescript",
    "prisma",
    "postgresql"
  ],
  "author": "TBI-Prop Team",
  "license": "MIT",
  "workspaces": [
    "backend",
    "frontend"
  ],
  "devDependencies": {
    "@types/node": "^20.0.0",
    "typescript": "^5.0.0"
  },
  "dependencies": {
    "@types/axios": "^0.9.36",
    "axios": "^1.11.0",
    "opencage-api-client": "^2.0.0"
  }
}
